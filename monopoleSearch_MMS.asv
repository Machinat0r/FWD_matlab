%main
%gsm
clear;
clc;
%%
% Date = '2015-09-01/2017-04-30';
% Date = '2015-09-01/2023-04-30';
Date = '2018-06-16/2018-06-17';
% Date = '2017-01-01/2021-01-01';
% Date = '2022-06-09/2022-07-02';

splitDate = regexp(Date,'/','split');
ic = 1:4;
filenames1 = SDCFilenames(Date,ic,'inst','fgm','drm','brst');
% filenames2 = SDCFilenames(Date,ic,'inst','edp','drm','brst','dpt','dce');
% filenames3 = SDCFilenames(Date,ic,'inst','fpi','drm','brst','dpt','des-moms,dis-moms,des-dist,dis-dist');
% filenames_srvy = SDCFilenames(Date,ic,'inst','fgm','drm','srvy'); %To get loaction
filenames = filenames1;

expr = '_[0-9]+\_v';
NameTags = regexp(filenames,expr,'match');
NameTags = unique(cellfun(@cellstr,NameTags));
FileGroups = cell(1,length(NameTags)); 
for j = 1:length(NameTags)
    FileGroups{j} = filenames(contains(filenames,NameTags{j}));
end
FileGroups = cellfun(@cellstr,FileGroups,'UniformOutput',false);%按时间分类整理后的文件名组

global OutputDir ParentDir
ParentDir = '/Volumes/172.17.190.41/Data/MMS/'; 
%The dir of "SDCFilesDownload" to "datamove" must be the ParentDir!
OutputDir = [ParentDir,splitDate{1},'To',splitDate{2},'/'];
if ~isfolder([OutputDir,'meanFig/'])
    mkdir([OutputDir,'meanFig/']);
end
%%
units = irf_units;
NameTags{end+1} = ['_' strrep(splitDate{2},'-','') '235959_v'];
for TDT = 1:length(NameTags)-1 %This is a distinctive temp  (๑ˉ∀ˉ๑)
tempDir = [OutputDir,NameTags{TDT}(2:end-2),'/'];
clc
fprintf(['当前处理时间为:',NameTags{TDT}(2:end-2),'\n'])

tempDate = [NameTags{TDT}(2:5),'-',NameTags{TDT}(6:7),'-',NameTags{TDT}(8:9),'T',...
    NameTags{TDT}(10:11),':',NameTags{TDT}(12:13),':',NameTags{TDT}(14:15),'.000Z/',...
    NameTags{TDT+1}(2:5),'-',NameTags{TDT+1}(6:7),'-',NameTags{TDT+1}(8:9),'T',...
    NameTags{TDT+1}(10:11),':',NameTags{TDT+1}(12:13),':',NameTags{TDT+1}(14:15),'.000Z'];
tempTint=irf.tint(tempDate);

%% Poincare Index  
% srvyIdx = find(contains(filenames_srvy,NameTags{TDT}(2:9))==1);
flag = 0;flag2 = 0;
if length(FileGroups{TDT}) == 4 
try
    SDCFilesDownload_NAS(FileGroups{TDT},tempDir);
    SDCDataMove(tempDir,ParentDir); mms.db_init('local_file_db',ParentDir);
    B1_ts=mms.get_data('B_gsm_brst',tempTint,1);%先导入一个文件看看文件中包含的时间段
    tint = irf.tint(B1_ts.time.epoch(1),B1_ts.time.epoch(end));  
    c_eval("B?_ts=mms.get_data('B_gsm_brst',tint,?);");
    c_eval('B?_gsm = irf.ts2mat(B?_ts);'); 
    c_eval('B? = irf_abs(B?_gsm);');
    c_eval('B? = irf_resamp(B?,B1);',2:4);

    PI=c_4_poincare_index(B1(:,2:4),B2(:,2:4),B3(:,2:4),B4(:,2:4));
    PI(PI>=0.5) = 1;
    PI(PI<=-0.5) = -1;
    PI(abs(PI)<0.5) = 0;
%% solve monopole
    if ~isempty(find(PI ~= 0,1))
%         SDCFilesDownload(filenames_srvy(srvyIdx),tempDir);
%         SDCDataMove(tempDir,ParentDir); mms.db_init('local_file_db',ParentDir);
        Pos = mms.get_data('R_gsm',tint);
        c_eval('R? = Pos.gsmR?;')
        c_eval('R? = [Pos.time.epochUnix R?(:,1:3)];')
        c_eval('R? = irf_resamp(R?,B1);')
        CenterPoint = (R1(:,2:4)+R2(:,2:4)+R3(:,2:4)+R4(:,2:4))/4;
        c_eval('R?(:,2:4) = R?(:,2:4)-CenterPoint;');
        
    LocPoint = zeros(length(PI),3)*nan;
    LocRes = cell(length(PI),1);
    Q = zeros(length(PI),1)*nan;
    resQ = cell(length(PI),1);
    
    Qerror = ones(length(PI),1)*1000;
    Locerror = ones(length(PI),1)*200;
    dLoc = ones(length(PI),15)*5;
    
    % div
    gradB=c_4_grad('R?','B?_gsm','grad');
    divB=[gradB(:,1) sum([gradB(:,2) gradB(:,6) gradB(:,10)],2)];      %% 未归一化散度

    PI_id = find(PI~=0)';
    for i = PI_id
    flag_m = 0;
    time_flagm = 0;
    clc;
    disp(['当前日期:' NameTags{TDT}(2:end-2)])
    disp(['current calculate:',num2str(i),'/',num2str(length(PI))]);
    
    MultiPower = ceil(max([log10(abs(R1(i,2:4))),log10(abs(R2(i,2:4))),log10(abs(R3(i,2:4))),log10(abs(R4(i,2:4)))]));
    
    if MultiPower > 3
        continue
    end
    
    RR_mean = zeros(1,4);
    for ii = 1:3 
    c_eval(['RR',num2str(ii),'?=[R',num2str(ii),'(i,2),R',num2str(ii),'(i,3),R',num2str(ii),'(i,4);',...
        'R?(i,2),R?(i,3),R?(i,4)];'],ii+1:4);  %% ♥
    c_eval(['RR_mean=RR_mean+irf_abs(RR',num2str(ii),'?(2,:)-RR',num2str(ii),'?(1,:));'],ii+1:4);  
    end
    RR_mean = RR_mean(4)/6;
    
    % solve
    [Q(i),resQ{i},LocPoint(i,:),LocRes{i}] = CalError('R?','B?_gsm',i,i*sign(divB(i,2)),RR_mean,1);
    
    id = nchoosek(1:6,2);
    c_eval('tempd? = irf_abs(LocRes{i}(id(?,1),:)-LocRes{i}(id(?,2),:));',1:15)
    tempd = [];
    c_eval('tempd = [tempd,tempd?(4)/RR_mean];',1:15);
    dLoc(i,:) = tempd;
    
    
    if mean(tempd)<0.3
        flag_m = 1;
        time_flagm = B1(i,1);
        tempidx_B1 = i;
    elseif mean(tempd)<0.6
        flag_m = 2;
        time_flagm = B1(i,1);
        tempidx_B1 = i;
    elseif mean(tempd) < 1
        flag_m = 3;
        time_flagm = B1(i,1);
        tempidx_B1 = i;
    end
    
    switch flag_m
        case 1
        writematrix(['Flag 03 find at: ',datestr(datenum(1970,1,1,0,0,0)+time_flagm/86400,'yyyymmdd HH:MM:SS.FFF')],...
            [OutputDir,'case_mean_03.txt'],'WriteMode','append','Encoding','UTF-8')
        writematrix(['mean RR = ', num2str(mean(tempd),5),],...
            [OutputDir,'case_mean_03.txt'],'WriteMode','append','Encoding','UTF-8')
        case 2
        writematrix(['Flag 06 find at: ',datestr(datenum(1970,1,1,0,0,0)+time_flagm/86400,'yyyymmdd HH:MM:SS.FFF')],...
            [OutputDir,'case_mean_06.txt'],'WriteMode','append','Encoding','UTF-8')
        writematrix(['mean RR = ', num2str(mean(tempd),5),],...
            [OutputDir,'case_mean_06.txt'],'WriteMode','append','Encoding','UTF-8')
        case 3
        writematrix(['Flag 10 find at: ',datestr(datenum(1970,1,1,0,0,0)+time_flagm/86400,'yyyymmdd HH:MM:SS.FFF')],...
            [OutputDir,'case_mean_1.txt'],'WriteMode','append','Encoding','UTF-8')
        writematrix(['mean RR = ', num2str(mean(tempd),5),],...
            [OutputDir,'case_mean_1.txt'],'WriteMode','append','Encoding','UTF-8')
    end
%% Plot
if flag_m ~=0
try
    monopoleSearch_MMS_plot('tint',[OutputDir,'meanFig/'])
catch
    writematrix([NameTags{TDT}(2:end-2),'的画图出现问题'],[OutputDir,'errorlog.txt'],'WriteMode','append','Encoding','UTF-8')
end
break
end

    end
    end
catch
    writematrix([NameTags{TDT}(2:end-2),'的数据下载或读取出现问题'],[OutputDir,'errorlog.txt'],'WriteMode','append','Encoding','UTF-8')
end
%% Delete folder
try
    cd(OutputDir)
    rmdir(tempDir,'s');
    fclose all;
catch
    fprintf(['删除文件夹',NameTags{TDT}(2:end-2),'失败\n'])
end
%% continue
continue 
end
end